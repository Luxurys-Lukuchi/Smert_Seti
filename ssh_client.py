import paramiko

def ssh_connect(host, port, username, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        ssh.connect(host, port=port, username=username, password=password)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {host}")
        return ssh
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None


def ssh_interactive(ssh):
    channel = ssh.invoke_shell()
    print("üü¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.")

    buffer = ''
    while True:
        try:
            user_input = input()
            if user_input.lower() in ['exit', 'quit']:
                break
            channel.send(user_input + '\n')

            # –ë—É—Ñ–µ—Ä –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            while True:
                if channel.recv_ready():
                    data = channel.recv(1024).decode(errors='replace')
                    if not data:
                        break

                    buffer += data

                    # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –º–∞—Ä–∫–µ—Ä—É "---"
                    while '\n---\n' in buffer:
                        parts = buffer.split('\n---\n', 1)
                        line = parts[0].strip()

                        if line.startswith('command:'):
                            print(f"> {line[8:].strip()}")
                        elif line.startswith('result:'):
                            result_lines = line[8:].splitlines()
                            for res_line in result_lines:
                                print(f"‚Üí {res_line}")

                        buffer = parts[1]

                else:
                    break

        except KeyboardInterrupt:
            print("\n‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ.")
            break

    channel.close()


if __name__ == "__main__":
    host = input("Host: ")
    port = int(input("Port [22]: ") or 22)
    username = input("Username: ")
    password = input("Password: ")

    ssh = ssh_connect(host, port, username, password)
    if ssh:
        ssh_interactive(ssh)
        ssh.close()